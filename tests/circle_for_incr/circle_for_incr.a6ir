Version Goto

main_integer(1 param√®tres) (
  var Formal(1) x;
  var Local j;
  var Local i;
  var Local continue;
  var Local _tmp_9;
  var Local _tmp_8;
  var Local _tmp_7;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_main_integer_0: continue <- true
_main_integer_1: i <- 0
_main_integer_2: # While
_main_integer_3: goto _label_main_integer_2
_label_main_integer_1: _label_main_integer_1
_main_integer_5: # Corps de boucle
_main_integer_6: continue <- false
_main_integer_7: j <- 0
_main_integer_8: # While
_main_integer_9: goto _label_main_integer_4
_label_main_integer_3: _label_main_integer_3
_main_integer_11: # Corps de boucle
_main_integer_12: _tmp_9 <- j + 1
_main_integer_13: j <- _tmp_9
_main_integer_14: # If
_main_integer_15: _tmp_4 <- i * i
_main_integer_16: _tmp_5 <- j * j
_main_integer_17: _tmp_6 <- _tmp_4 + _tmp_5
_main_integer_18: _tmp_7 <- x * x
_main_integer_19: _tmp_8 <- _tmp_6 < _tmp_7
_main_integer_20: goto _label_main_integer_5 when _tmp_8
_main_integer_21: # Bloc else
_main_integer_22: print(35)
_main_integer_23: goto _label_main_integer_6
_label_main_integer_5: _label_main_integer_5
_main_integer_25: # Bloc then
_main_integer_26: print(46)
_main_integer_27: continue <- true
_label_main_integer_6: _label_main_integer_6
_main_integer_29: # Fin if
_main_integer_30: print(32)
_label_main_integer_4: _label_main_integer_4
_main_integer_32: # Test de boucle
_main_integer_33: _tmp_2 <- x + 1
_main_integer_34: _tmp_3 <- j < _tmp_2
_main_integer_35: goto _label_main_integer_3 when _tmp_3
_main_integer_36: # Fin boucle
_main_integer_37: print(10)
_main_integer_38: _tmp_1 <- i + 1
_main_integer_39: i <- _tmp_1
_label_main_integer_2: _label_main_integer_2
_main_integer_41: # Test de boucle
_main_integer_42: goto _label_main_integer_1 when continue
_main_integer_43: # Fin boucle

)


