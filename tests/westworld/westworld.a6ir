Version Goto

main_integer(1 paramètres) (
  var Formal(1) x;
  var Local _tmp_1;
_main_integer_0: _tmp_1 <- westworld()
_main_integer_1: play_boolean[][]_integer_integer(_tmp_1, 40, 24)

)


bass(0 paramètres) (
  var Return result;
  var Local line;
  var Local _tmp_1;
_bass_0: _tmp_1 <- [6]
_bass_1: line <- _tmp_1
_bass_2: line[0] <- 0
_bass_3: line[1] <- 2
_bass_4: line[2] <- 7
_bass_5: line[3] <- 14
_bass_6: line[4] <- 15
_bass_7: line[5] <- 15
_bass_8: result <- line

)


theme(0 paramètres) (
  var Return result;
  var Local line;
  var Local _tmp_1;
_theme_0: _tmp_1 <- [12]
_theme_1: line <- _tmp_1
_theme_2: line[0] <- 14
_theme_3: line[1] <- 14
_theme_4: line[2] <- 15
_theme_5: line[3] <- 14
_theme_6: line[4] <- 14
_theme_7: line[5] <- 15
_theme_8: line[6] <- 14
_theme_9: line[7] <- 12
_theme_10: line[8] <- 10
_theme_11: line[9] <- 10
_theme_12: line[10] <- 10
_theme_13: line[11] <- 10
_theme_14: result <- line

)


repeat_integer[]_integer(2 paramètres) (
  var Return result;
  var Local pulse;
  var Local linetmp;
  var Formal(1) line;
  var Formal(2) length;
  var Local _tmp_7;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_repeat_integer[]_integer_0: _tmp_6 <- 2 * length
_repeat_integer[]_integer_1: _tmp_7 <- [_tmp_6]
_repeat_integer[]_integer_2: linetmp <- _tmp_7
_repeat_integer[]_integer_3: pulse <- 0
_repeat_integer[]_integer_4: # While
_repeat_integer[]_integer_5: goto _label_repeat_integer[]_integer_2
_label_repeat_integer[]_integer_1: _label_repeat_integer[]_integer_1
_repeat_integer[]_integer_7: # Corps de boucle
_repeat_integer[]_integer_8: _tmp_5 <- line[pulse]
_repeat_integer[]_integer_9: linetmp[pulse] <- _tmp_5
_repeat_integer[]_integer_10: _tmp_3 <- pulse + length
_repeat_integer[]_integer_11: _tmp_4 <- line[pulse]
_repeat_integer[]_integer_12: linetmp[_tmp_3] <- _tmp_4
_repeat_integer[]_integer_13: _tmp_2 <- pulse + 1
_repeat_integer[]_integer_14: pulse <- _tmp_2
_label_repeat_integer[]_integer_2: _label_repeat_integer[]_integer_2
_repeat_integer[]_integer_16: # Test de boucle
_repeat_integer[]_integer_17: _tmp_1 <- pulse < length
_repeat_integer[]_integer_18: goto _label_repeat_integer[]_integer_1 when _tmp_1
_repeat_integer[]_integer_19: # Fin boucle
_repeat_integer[]_integer_20: result <- line

)


burn_boolean[][]_integer[]_integer_integer_integer(5 paramètres) (
  var Formal(5) transpose;
  var Formal(4) speed;
  var Local pulse;
  var Local pitch;
  var Formal(2) line;
  var Formal(3) length;
  var Local internal;
  var Formal(1) cylinder;
  var Local _tmp_9;
  var Local _tmp_8;
  var Local _tmp_7;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_burn_boolean[][]_integer[]_integer_integer_integer_0: pulse <- 0
_burn_boolean[][]_integer[]_integer_integer_integer_1: # While
_burn_boolean[][]_integer[]_integer_integer_integer_2: goto _label_burn_boolean[][]_integer[]_integer_integer_integer_2
_label_burn_boolean[][]_integer[]_integer_integer_integer_1: _label_burn_boolean[][]_integer[]_integer_integer_integer_1
_burn_boolean[][]_integer[]_integer_integer_integer_4: # Corps de boucle
_burn_boolean[][]_integer[]_integer_integer_integer_5: internal <- 0
_burn_boolean[][]_integer[]_integer_integer_integer_6: _tmp_8 <- line[pulse]
_burn_boolean[][]_integer[]_integer_integer_integer_7: _tmp_9 <- _tmp_8 + transpose
_burn_boolean[][]_integer[]_integer_integer_integer_8: pitch <- _tmp_9
_burn_boolean[][]_integer[]_integer_integer_integer_9: # While
_burn_boolean[][]_integer[]_integer_integer_integer_10: goto _label_burn_boolean[][]_integer[]_integer_integer_integer_4
_label_burn_boolean[][]_integer[]_integer_integer_integer_3: _label_burn_boolean[][]_integer[]_integer_integer_integer_3
_burn_boolean[][]_integer[]_integer_integer_integer_12: # Corps de boucle
_burn_boolean[][]_integer[]_integer_integer_integer_13: _tmp_5 <- pulse * speed
_burn_boolean[][]_integer[]_integer_integer_integer_14: _tmp_6 <- _tmp_5 + internal
_burn_boolean[][]_integer[]_integer_integer_integer_15: _tmp_7 <- cylinder[_tmp_6]
_burn_boolean[][]_integer[]_integer_integer_integer_16: _tmp_7[pitch] <- true
_burn_boolean[][]_integer[]_integer_integer_integer_17: _tmp_4 <- internal + 1
_burn_boolean[][]_integer[]_integer_integer_integer_18: internal <- _tmp_4
_label_burn_boolean[][]_integer[]_integer_integer_integer_4: _label_burn_boolean[][]_integer[]_integer_integer_integer_4
_burn_boolean[][]_integer[]_integer_integer_integer_20: # Test de boucle
_burn_boolean[][]_integer[]_integer_integer_integer_21: _tmp_3 <- internal < speed
_burn_boolean[][]_integer[]_integer_integer_integer_22: goto _label_burn_boolean[][]_integer[]_integer_integer_integer_3 when _tmp_3
_burn_boolean[][]_integer[]_integer_integer_integer_23: # Fin boucle
_burn_boolean[][]_integer[]_integer_integer_integer_24: _tmp_2 <- pulse + 1
_burn_boolean[][]_integer[]_integer_integer_integer_25: pulse <- _tmp_2
_label_burn_boolean[][]_integer[]_integer_integer_integer_2: _label_burn_boolean[][]_integer[]_integer_integer_integer_2
_burn_boolean[][]_integer[]_integer_integer_integer_27: # Test de boucle
_burn_boolean[][]_integer[]_integer_integer_integer_28: _tmp_1 <- pulse < length
_burn_boolean[][]_integer[]_integer_integer_integer_29: goto _label_burn_boolean[][]_integer[]_integer_integer_integer_1 when _tmp_1
_burn_boolean[][]_integer[]_integer_integer_integer_30: # Fin boucle

)


blank_integer_integer(2 paramètres) (
  var Formal(1) width;
  var Return result;
  var Local pulse;
  var Local j;
  var Local i;
  var Formal(2) duration;
  var Local cylinder;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_blank_integer_integer_0: _tmp_6 <- [duration]
_blank_integer_integer_1: cylinder <- _tmp_6
_blank_integer_integer_2: i <- 0
_blank_integer_integer_3: # While
_blank_integer_integer_4: goto _label_blank_integer_integer_2
_label_blank_integer_integer_1: _label_blank_integer_integer_1
_blank_integer_integer_6: # Corps de boucle
_blank_integer_integer_7: _tmp_5 <- [width]
_blank_integer_integer_8: pulse <- _tmp_5
_blank_integer_integer_9: j <- 0
_blank_integer_integer_10: # While
_blank_integer_integer_11: goto _label_blank_integer_integer_4
_label_blank_integer_integer_3: _label_blank_integer_integer_3
_blank_integer_integer_13: # Corps de boucle
_blank_integer_integer_14: pulse[j] <- false
_blank_integer_integer_15: _tmp_4 <- j + 1
_blank_integer_integer_16: j <- _tmp_4
_label_blank_integer_integer_4: _label_blank_integer_integer_4
_blank_integer_integer_18: # Test de boucle
_blank_integer_integer_19: _tmp_3 <- j < width
_blank_integer_integer_20: goto _label_blank_integer_integer_3 when _tmp_3
_blank_integer_integer_21: # Fin boucle
_blank_integer_integer_22: cylinder[i] <- pulse
_blank_integer_integer_23: _tmp_2 <- i + 1
_blank_integer_integer_24: i <- _tmp_2
_label_blank_integer_integer_2: _label_blank_integer_integer_2
_blank_integer_integer_26: # Test de boucle
_blank_integer_integer_27: _tmp_1 <- i < duration
_blank_integer_integer_28: goto _label_blank_integer_integer_1 when _tmp_1
_blank_integer_integer_29: # Fin boucle
_blank_integer_integer_30: result <- cylinder

)


westworld(0 paramètres) (
  var Return result;
  var Local cylinder;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_westworld_0: _tmp_6 <- blank_integer_integer(40, 24)
_westworld_1: cylinder <- _tmp_6
_westworld_2: _tmp_5 <- theme()
_westworld_3: burn_boolean[][]_integer[]_integer_integer_integer(cylinder, _tmp_5, 12, 2, 12)
_westworld_4: _tmp_4 <- theme()
_westworld_5: burn_boolean[][]_integer[]_integer_integer_integer(cylinder, _tmp_4, 12, 2, 24)
_westworld_6: _tmp_1 <- bass()
_westworld_7: _tmp_2 <- repeat_integer[]_integer(_tmp_1, 6)
_westworld_8: _tmp_3 <- repeat_integer[]_integer(_tmp_2, 12)
_westworld_9: burn_boolean[][]_integer[]_integer_integer_integer(cylinder, _tmp_3, 24, 1, 0)
_westworld_10: result <- cylinder

)


play_boolean[][]_integer_integer(3 paramètres) (
  var Formal(2) width;
  var Local w;
  var Formal(3) height;
  var Local h;
  var Formal(1) cylinder;
  var Local _tmp_8;
  var Local _tmp_7;
  var Local _tmp_6;
  var Local _tmp_5;
  var Local _tmp_4;
  var Local _tmp_3;
  var Local _tmp_2;
  var Local _tmp_1;
_play_boolean[][]_integer_integer_0: _tmp_8 <- height - 1
_play_boolean[][]_integer_integer_1: h <- _tmp_8
_play_boolean[][]_integer_integer_2: # While
_play_boolean[][]_integer_integer_3: goto _label_play_boolean[][]_integer_integer_2
_label_play_boolean[][]_integer_integer_1: _label_play_boolean[][]_integer_integer_1
_play_boolean[][]_integer_integer_5: # Corps de boucle
_play_boolean[][]_integer_integer_6: _tmp_7 <- width - 1
_play_boolean[][]_integer_integer_7: w <- _tmp_7
_play_boolean[][]_integer_integer_8: # While
_play_boolean[][]_integer_integer_9: goto _label_play_boolean[][]_integer_integer_4
_label_play_boolean[][]_integer_integer_3: _label_play_boolean[][]_integer_integer_3
_play_boolean[][]_integer_integer_11: # Corps de boucle
_play_boolean[][]_integer_integer_12: # If
_play_boolean[][]_integer_integer_13: _tmp_5 <- cylinder[h]
_play_boolean[][]_integer_integer_14: _tmp_6 <- _tmp_5[w]
_play_boolean[][]_integer_integer_15: goto _label_play_boolean[][]_integer_integer_5 when _tmp_6
_play_boolean[][]_integer_integer_16: # Bloc else
_play_boolean[][]_integer_integer_17: print(32)
_play_boolean[][]_integer_integer_18: print(32)
_play_boolean[][]_integer_integer_19: goto _label_play_boolean[][]_integer_integer_6
_label_play_boolean[][]_integer_integer_5: _label_play_boolean[][]_integer_integer_5
_play_boolean[][]_integer_integer_21: # Bloc then
_play_boolean[][]_integer_integer_22: print(35)
_play_boolean[][]_integer_integer_23: print(35)
_label_play_boolean[][]_integer_integer_6: _label_play_boolean[][]_integer_integer_6
_play_boolean[][]_integer_integer_25: # Fin if
_play_boolean[][]_integer_integer_26: _tmp_4 <- w - 1
_play_boolean[][]_integer_integer_27: w <- _tmp_4
_label_play_boolean[][]_integer_integer_4: _label_play_boolean[][]_integer_integer_4
_play_boolean[][]_integer_integer_29: # Test de boucle
_play_boolean[][]_integer_integer_30: _tmp_3 <- 0 <= w
_play_boolean[][]_integer_integer_31: goto _label_play_boolean[][]_integer_integer_3 when _tmp_3
_play_boolean[][]_integer_integer_32: # Fin boucle
_play_boolean[][]_integer_integer_33: print(10)
_play_boolean[][]_integer_integer_34: _tmp_2 <- h - 1
_play_boolean[][]_integer_integer_35: h <- _tmp_2
_label_play_boolean[][]_integer_integer_2: _label_play_boolean[][]_integer_integer_2
_play_boolean[][]_integer_integer_37: # Test de boucle
_play_boolean[][]_integer_integer_38: _tmp_1 <- 0 <= h
_play_boolean[][]_integer_integer_39: goto _label_play_boolean[][]_integer_integer_1 when _tmp_1
_play_boolean[][]_integer_integer_40: # Fin boucle

)


