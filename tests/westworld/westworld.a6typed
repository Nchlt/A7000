Version Typed

main(integer x) (
  var integer x;
  void : play(boolean[][] : westworld(), integer : 40, integer : 24);
)


bass() (
  var integer[] result;
  var integer[] line;
  integer[] : line := integer[] : [integer : 6]integer;
  integer : integer[] : integer[] : line[integer : 0] := integer : 0;
  integer : integer[] : integer[] : line[integer : 1] := integer : 2;
  integer : integer[] : integer[] : line[integer : 2] := integer : 7;
  integer : integer[] : integer[] : line[integer : 3] := integer : 14;
  integer : integer[] : integer[] : line[integer : 4] := integer : 15;
  integer : integer[] : integer[] : line[integer : 5] := integer : 15;
  integer[] : result := integer[] : integer[] : line;
)


theme() (
  var integer[] result;
  var integer[] line;
  integer[] : line := integer[] : [integer : 12]integer;
  integer : integer[] : integer[] : line[integer : 0] := integer : 14;
  integer : integer[] : integer[] : line[integer : 1] := integer : 14;
  integer : integer[] : integer[] : line[integer : 2] := integer : 15;
  integer : integer[] : integer[] : line[integer : 3] := integer : 14;
  integer : integer[] : integer[] : line[integer : 4] := integer : 14;
  integer : integer[] : integer[] : line[integer : 5] := integer : 15;
  integer : integer[] : integer[] : line[integer : 6] := integer : 14;
  integer : integer[] : integer[] : line[integer : 7] := integer : 12;
  integer : integer[] : integer[] : line[integer : 8] := integer : 10;
  integer : integer[] : integer[] : line[integer : 9] := integer : 10;
  integer : integer[] : integer[] : line[integer : 10] := integer : 10;
  integer : integer[] : integer[] : line[integer : 11] := integer : 10;
  integer[] : result := integer[] : integer[] : line;
)


repeat(integer[] line, integer length) (
  var integer[] result;
  var integer pulse;
  var integer[] linetmp;
  var integer[] line;
  var integer length;
  integer[] : linetmp := integer[] : [integer : ( integer : 2 * integer : integer : length )]integer;
  integer : pulse := integer : 0;
  while boolean : ( integer : integer : pulse < integer : integer : length ) (
    integer : integer[] : integer[] : linetmp[integer : integer : pulse] := integer : integer : integer[] : integer[] : line[integer : integer : pulse];
    integer : integer[] : integer[] : linetmp[integer : ( integer : integer : pulse + integer : integer : length )] := integer : integer : integer[] : integer[] : line[integer : integer : pulse];
    integer : pulse := integer : ( integer : integer : pulse + integer : 1 );
  );
  integer[] : result := integer[] : integer[] : line;
)


burn(boolean[][] cylinder, integer[] line, integer length, integer speed, integer transpose) (
  var integer transpose;
  var integer speed;
  var integer pulse;
  var integer pitch;
  var integer[] line;
  var integer length;
  var integer internal;
  var boolean[][] cylinder;
  integer : pulse := integer : 0;
  while boolean : ( integer : integer : pulse < integer : integer : length ) (
    integer : internal := integer : 0;
    integer : pitch := integer : ( integer : integer : integer[] : integer[] : line[integer : integer : pulse] + integer : integer : transpose );
    while boolean : ( integer : integer : internal < integer : integer : speed ) (
      boolean : boolean[] : boolean[] : boolean[][] : boolean[][] : cylinder[integer : ( integer : ( integer : integer : pulse * integer : integer : speed ) + integer : integer : internal )][integer : integer : pitch] := boolean : true;
      integer : internal := integer : ( integer : integer : internal + integer : 1 );
    );
    integer : pulse := integer : ( integer : integer : pulse + integer : 1 );
  );
)


blank(integer width, integer duration) (
  var integer width;
  var boolean[][] result;
  var boolean[] pulse;
  var integer j;
  var integer i;
  var integer duration;
  var boolean[][] cylinder;
  boolean[][] : cylinder := boolean[][] : [integer : integer : duration]boolean[];
  integer : i := integer : 0;
  while boolean : ( integer : integer : i < integer : integer : duration ) (
    boolean[] : pulse := boolean[] : [integer : integer : width]boolean;
    integer : j := integer : 0;
    while boolean : ( integer : integer : j < integer : integer : width ) (
      boolean : boolean[] : boolean[] : pulse[integer : integer : j] := boolean : false;
      integer : j := integer : ( integer : integer : j + integer : 1 );
    );
    boolean[] : boolean[][] : boolean[][] : cylinder[integer : integer : i] := boolean[] : boolean[] : pulse;
    integer : i := integer : ( integer : integer : i + integer : 1 );
  );
  boolean[][] : result := boolean[][] : boolean[][] : cylinder;
)


westworld() (
  var boolean[][] result;
  var boolean[][] cylinder;
  boolean[][] : cylinder := boolean[][] : blank(integer : 40, integer : 24);
  void : burn(boolean[][] : boolean[][] : cylinder, integer[] : theme(), integer : 12, integer : 2, integer : 12);
  void : burn(boolean[][] : boolean[][] : cylinder, integer[] : theme(), integer : 12, integer : 2, integer : 24);
  void : burn(boolean[][] : boolean[][] : cylinder, integer[] : repeat(integer[] : repeat(integer[] : bass(), integer : 6), integer : 12), integer : 24, integer : 1, integer : 0);
  boolean[][] : result := boolean[][] : boolean[][] : cylinder;
)


play(boolean[][] cylinder, integer width, integer height) (
  var integer width;
  var integer w;
  var integer height;
  var integer h;
  var boolean[][] cylinder;
  integer : h := integer : ( integer : integer : height - integer : 1 );
  while boolean : ( integer : 0 <= integer : integer : h ) (
    integer : w := integer : ( integer : integer : width - integer : 1 );
    while boolean : ( integer : 0 <= integer : integer : w ) (
      if boolean : boolean : boolean[] : boolean[] : boolean[][] : boolean[][] : cylinder[integer : integer : h][integer : integer : w] then (
        print(integer : 35);
        print(integer : 35);
      ) else (
        print(integer : 32);
        print(integer : 32);
      );
      integer : w := integer : ( integer : integer : w - integer : 1 );
    );
    print(integer : 10);
    integer : h := integer : ( integer : integer : h - integer : 1 );
  );
)


